{"version":3,"sources":["components/app-info/app-info.js","components/search-panel/search-panel.js","components/app-filter/app-filter.js","components/employees-list-item/employees-list-item.js","components/employees-list/employees-list.js","components/employees-add-form/employees-add-form.js","components/app/app.js","index.js"],"names":["AppInfo","employees","increased","raised","morethan1000","className","SearchPanel","props","e","val","target","value","setState","searchState","state","type","placeholder","this","onChange","Component","AppFilter","buttons","name","label","map","clazz","filter","onClick","filterState","EmployeesListItem","salary","increase","raise","onProps","deleteEmployee","classIncrease","defaultValue","EmployeesList","data","elements","item","id","itemProps","currentTarget","getAttribute","EmployeesAddForm","onValueChange","onSubmit","preventDefault","addEmployee","App","prop","newItem","maxId","newArr","console","log","index","findIndex","elem","slice","searchEmployee","length","indexOf","searchFilter","result","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c31d4f8.chunk.js","sourcesContent":["import \"./app-info.css\";\n\nconst AppInfo = ({employees, increased, raised, morethan1000}) => {\n    return (\n        <div className=\"app-info\">\n            <h1>Employees register in the company Valeriia LTD</h1>\n            <h2>Number of employees: {employees}</h2>\n            <h2>Will receive a bonus: <i className=\"fas fa-star\"></i> {increased}</h2>\n            <h2>Will get a raise: <i className=\"fas fa-cookie\"></i> {raised}</h2>\n            <h2>Salary more than 1000$: {morethan1000}</h2>\n        </div>\n    )\n}\n\nexport default AppInfo;\n","import './search-panel.css';\nimport {Component} from 'react';\n\nclass SearchPanel extends Component {\n  constructor(props) {\n    super(props);\n      this.state = {val: ''};\n  }\n\n// Ф-ция кот. записивает value c инпута в state и передает ету value в ф-цию searchEmployee\n  SearchPanel = (e) => {\n    const val = e.target.value;\n    this.setState({val});\n    this.props.searchState(val);\n\n  }\n\n    render() {\n      return(\n        <input type=\"text\"\n                className=\"form-control search-input\"\n                placeholder=\"Find employee\"\n                value = {this.state.val}\n                onChange = {this.SearchPanel}/>\n        )\n    }\n}\n\nexport default SearchPanel;\n","import \"./app-filter.css\";\n\n\nconst AppFilter = (props) => {\n  const arrBtns =  [\n    {name:'all', label: 'All employees'},\n    {name:'raise', label: 'Will get a raise'},\n    {name:'bonus', label: 'Will receive a bonus'},\n    {name:'morethan1000', label: 'Salary more than 1000$'},\n  ]\n  const buttons = arrBtns.map(({name, label}) => {\n    const active = props.filter === name  //проверілі active true or false\n    const clazz = active ? 'btn-light' : 'btn-outline-light'\n    return (\n      <button type=\"button\"\n              className={`btn ${clazz}`}\n              key = {name}\n              onClick = {() => props.filterState(name)}\n              >\n              \n              {label}\n\n      </button>\n    )\n  })\n\n    return (\n        <div className=\"btn-group\">\n            {buttons}\n        </div>\n    )\n}\n\nexport default AppFilter;\n","import './employees-list-item.css';\n\n\n\nconst EmployeesListItem = (props) => {\n  /*\n            -----ВАРИАНТ ЧЕРЕЗ КЛАСС------\n  constructor(props){ //принимает с function App\n    super(props);\n    this.state = {  //создали стейт чтоб менять его локально\n      increase:false,\n      like:false\n    }\n  }\n  changeColor = () => { //будет менять цвет по нажатии на печеньку\n        this.setState(({increase})=>({\n          increase:!increase\n      }))\n  }\n  addStar =() =>{ //появляется лайк\n      this.setState(({like})=>({\n        like:!like\n      }))\n  }\n  */\n\n      const {name,salary, increase, raise, onProps, deleteEmployee} = props;\n      /*const {increase, like} = this.state; */\n      let classIncrease = \"list-group-item d-flex justify-content-between\";\n      if(increase){\n        classIncrease+=' increase'\n      }\n      if(raise){\n        classIncrease+= ' raise'\n      }\n      return(\n      <li className={classIncrease}>\n          <span className=\"list-group-item-label\"\n                onClick = {onProps}\n                data-toggle='increase'\n                >{name}</span>\n          <input type=\"text\" className=\"list-group-item-input\" defaultValue={salary+'$'}/>\n          <div className='d-flex justify-content-center align-items-center'>\n              <button type=\"button\"\n                  onClick = {onProps}\n                  className=\"btn-cookie btn-sm \"\n                  data-toggle='raise'>\n                  <i className=\"fas fa-cookie\"></i>\n              </button>\n\n              <button type=\"button\"\n                      className=\"btn-trash btn-sm \"\n                      onClick = {deleteEmployee}\n                      aria-label=\"trash\">\n                <i className=\"fas fa-trash\"></i>\n              </button>\n              <i className=\"fas fa-star\"></i>\n          </div>\n      </li>\n    )\n}\n\n/*\nconst EmployeesListItem = ({name, salary,increase}) => {\n    let classIncrease = \"list-group-item d-flex justify-content-between\";\n    if(increase){\n      classIncrease+=' increase'\n    }\n    return (\n        <li className={classIncrease}>\n            <span className=\"list-group-item-label\">{name}</span>\n            <input type=\"text\" className=\"list-group-item-input\" defaultValue={salary+'$'}/>\n            <div className='d-flex justify-content-center align-items-center'>\n                <button type=\"button\"\n                    className=\"btn-cookie btn-sm \">\n                    <i className=\"fas fa-cookie\"></i>\n                </button>\n\n                <button type=\"button\"\n                        className=\"btn-trash btn-sm \">\n                    <i className=\"fas fa-trash\"></i>\n                </button>\n                <i className=\"fas fa-star\"></i>\n            </div>\n        </li>\n    )\n}\n*/\nexport default EmployeesListItem;\n","import EmployeesListItem from \"../employees-list-item/employees-list-item\";\n\nimport './employees-list.css';\n\nconst EmployeesList = ({data, onProps, deleteEmployee}) => {\n  const elements = data.map(item=>{\n    const {id,...itemProps}=item\n    return(\n      /*<EmployeesListItem name={item.name} salary={item.salary} increase={item.increase} key={item.id}/>*/\n      <EmployeesListItem\n          key={id}\n          {...itemProps}\n          /*\n          onIncrease={() => onIncrease(id)}\n          onLike = {() => on (id)} */\n          onProps = {(e) => onProps(id, e.currentTarget.getAttribute('data-toggle'))}\n          deleteEmployee = {() => deleteEmployee(id)}/>\n    )\n  })\n  return (\n      <ul className=\"app-list list-group\">\n          {elements}\n      </ul>\n  )\n}\n\nexport default EmployeesList;\n","/*import './employees-add-form.css';*/\nimport {Component} from 'react';\nimport './employees-add-form.scss'\n\n\nclass EmployeesAddForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state= {\n      name: '',\n      salary: ''\n    }\n  }\n  onValueChange = (e) => {\n    this.setState ({\n      [e.target.name]:e.target.value\n    })\n  }\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.addEmployee(this.state.name,this.state.salary); //визиваем ф-цию с пропсов, добавляем нового сотр с инпутов в стейт на app.js\n    this.setState({ //очищаем єтот стейт для нових инпутов\n      name: '',\n      salary: ''\n    })\n  }\n\n\n  render() {\n    const {name, salary} = this.state;\n\n    return (\n        <div className=\"app-add-form\">\n            <h3>Add new employee</h3>\n            <form\n                className=\"add-form d-flex\"\n                onSubmit = {this.onSubmit}>\n\n                <input type=\"text\"\n                    className=\"form-control new-post-label\"\n                    placeholder=\"New employee's name\"\n                    name = \"name\"\n                    onChange = {this.onValueChange}\n                    value ={name}/>\n                <input type=\"number\"\n                    className=\"form-control new-post-label\"\n                    placeholder=\"Salary in $\"\n                    name=\"salary\"\n                    onChange = {this.onValueChange}\n                    value ={salary}/>\n\n                <button type=\"submit\"\n                        className=\"btn btn-outline-light\"\n                        >Add</button>\n            </form>\n        </div>\n    )\n  }\n}\n\nexport default EmployeesAddForm;\n","import {Component} from 'react';\n\nimport AppInfo from '../app-info/app-info';\nimport SearchPanel from '../search-panel/search-panel';\nimport AppFilter from '../app-filter/app-filter';\nimport EmployeesList from '../employees-list/employees-list';\nimport EmployeesAddForm from '../employees-add-form/employees-add-form';\nimport './app.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data:[\n        {name:'John C', salary:800, increase:false, raise:false, id:1}, //increase - ето состояние\n        {name:'Mike K', salary:1000, increase:true, raise:false, id:2},\n        {name:'Mick D', salary:2500, increase:false, raise:true, id:3},\n        {name:'Nick K', salary:2500, increase:false, raise:true, id:4}\n      ],\n      val: '',\n      filter: 'all'\n    };\n    this.maxId = 5;\n\n\n  }\n/*\n  onIncrease = (id) => {\n\n    this.setState(({data}) => {\n      const index = data.findIndex(elem=>elem.id === id)\n      const old = data[index];\n      const newItem = {...old, increase:!old.increase} //перезапис increase на противоположний\n      const newArr = [...data.slice(0,index),newItem, ...data.slice(index+1)] //создали новий массив и в нем вирезали обьекти до того которий поменяли, вставили новий обьект кот поменяли, и остаток\n\n      return {\n        data: newArr\n      }\n    })\n\n    this.setState (({data}) => ({ //круглие скобки надо чтоб сразу вернуть новий обьект\n      data:data.map(item=> {\n          if(item.id === id) {\n            return {...item, increase:!item.increase}\n          }\n          return item\n      })\n    }))\n  }\n  onLike = (id) => {\n    this.setState (({data}) => ({ //круглие скобки надо чтоб сразу вернуть новий обьект\n      data:data.map(item=> {\n          if(item.id === id) {\n            return {...item, like:!item.like}\n          }\n          return item\n      })\n    }))\n  }\n*/\n\n  // код которий више, переписуем на onProps чтоб оптимизировать і не повторять,\n  // он будет зависеmь от параметра - либо increase либо like передается в prop\n  onProps = (id,prop) => {\n    this.setState (({data}) => ({ //фигурние скобки надо чтоб сразу вернуть новий обьект\n      data:data.map(item=> {\n          if(item.id === id) {\n            return {...item, [prop]:!item[prop]}\n          }\n          return item\n      })\n    }))\n  }\n\n  // Ф-ция добавления, в кот передаем параметри с Employees-add-form и которая добавляет сотрудніка\n  addEmployee = (name,salary) => {\n    this.setState(({data}) => {\n      const newItem = {name:name, salary:salary, increase:false, raise:false, id:this.maxId++};\n      const newArr = [...data, newItem]\n      console.log({data:newArr})\n      return {data:newArr}\n      })\n    }\n\n// Ф-ция удаления сотр, в кот передаем id c EmployeesList, по id находим индекс єлемента кот надо удалить, создаем новий массив без даного елемента и записиваем его в дату изменяя стейт\n  deleteEmployee = (id) => {\n    this.setState(({data})=> {\n      const index = data.findIndex(elem=>elem.id === id);\n      const newArr = [...data.slice(0,index),...data.slice(index+1)]\n      console.log({data:newArr})\n        return {data:newArr}\n    })\n  }\n\n  searchState = (val) => {\n    this.setState({val})\n  }\n\n\n// Ф-ция поиска сотр, в кот передаем значение с инпута с SearchPanel и обьект дата для того чтоб его отфильтровать и вернуть нужного сотрудника\n  searchEmployee = (val, data) => {\n\n    if(val.length === 0) {\n      return data;\n    }\n    return data.filter(item => item.name.indexOf(val) > -1)\n  }\n\n  // Ф-ция фильтра\n  searchFilter = (filter, data) => {\n    switch(filter) {\n      case 'raise': return data.filter(item => item.raise);\n      case 'bonus': return data.filter(item => item.increase);\n      case 'morethan1000': return data.filter(item => item.salary > 1000);\n      default: return data;\n    }\n  }\n  filterState = (filter) => {\n    this.setState({filter})\n  }\n\n  render (){\n    const {val, data, filter} = this.state;\n    const result = this.searchFilter(filter, this.searchEmployee(val,data)) // фильтр возвращает фильтрованую дату уже на базе дати после поиска\n    const employees = this.state.data.length;\n    const increased = this.state.data.filter(item =>item.increase).length;\n    const raised = this.state.data.filter(item=>item.raise).length;\n    const morethan1000 = this.state.data.filter(item=> item.salary > 1000).length;\n\n    return (\n      <div className=\"app\">\n          <AppInfo\n              employees = {employees}\n              increased = {increased}\n              raised = {raised}\n              morethan1000 = {morethan1000}/>\n\n          <div className=\"search-panel\">\n              <SearchPanel\n                  searchState = {this.searchState}\n                  />\n              <AppFilter\n                  filter = {filter}\n                  filterState = {this.filterState}\n                  />\n          </div>\n\n          <EmployeesList\n              data={result}\n              /*\n              onIncrease = {this.onIncrease}\n              onLike = {this.onLike}  */\n              onProps = {this.onProps}\n              deleteEmployee = {this.deleteEmployee}/>\n          <EmployeesAddForm\n              data={this.state.data}\n              addEmployee = {this.addEmployee}\n              />\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\n\n/*import './index.css';*/\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}